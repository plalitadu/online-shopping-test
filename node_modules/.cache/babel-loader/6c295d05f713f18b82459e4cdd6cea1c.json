{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pare\\\\Development\\\\React\\\\11-FoodOrderApp\\\\src\\\\component\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport useHttp from \"../../hooks/use-https\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: \"m1\",\n  name: \"Sushi\",\n  description: \"Finest fish and veggies\",\n  price: 22.99\n}, {\n  id: \"m2\",\n  name: \"Schnitzel\",\n  description: \"A german specialty!\",\n  price: 16.5\n}, {\n  id: \"m3\",\n  name: \"Barbecue Burger\",\n  description: \"American, raw, meaty\",\n  price: 12.99\n}, {\n  id: \"m4\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99\n}];\n\nconst AvailableMeals = () => {\n  _s();\n\n  const mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 47\n  }, this));\n  const result = useHttp();\n  const mealList = [];\n\n  for (const key in result) {\n    mealList.push({\n      id: key,\n      name: result[key].name,\n      description: result[key].description,\n      price: result[key].price\n    });\n  }\n\n  console.log(DUMMY_MEALS);\n  console.log(mealList, 'mealList');\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"V+Xs4AIFRSzQzbWa4C6mjNcR2nI=\", false, function () {\n  return [useHttp];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/Pare/Development/React/11-FoodOrderApp/src/component/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useHttp","DUMMY_MEALS","id","name","description","price","AvailableMeals","mealsList","map","meal","result","mealList","key","push","console","log","meals"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,WAAW,EAAE,yBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADkB,EAOlB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,WAAW,EAAE,qBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAPkB,EAalB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,iBAFR;AAGEC,EAAAA,WAAW,EAAE,sBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAbkB,EAmBlB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,WAAW,EAAE,wBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAnBkB,CAApB;;AA2BA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,SAAS,GAAGN,WAAW,CAACO,GAAZ,CAAiBC,IAAD,iBAAU,QAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,IAAI,CAACP,EAAnB;AAAqC,IAAA,IAAI,EAAEO,IAAI,CAACN,IAAhD;AAAsD,IAAA,WAAW,EAAEM,IAAI,CAACL,WAAxE;AAAqF,IAAA,KAAK,EAAEK,IAAI,CAACJ;AAAjG,KAA4BI,IAAI,CAACP,EAAjC;AAAA;AAAA;AAAA;AAAA,UAA1B,CAAlB;AACA,QAAMQ,MAAM,GAAGV,OAAO,EAAtB;AACA,QAAMW,QAAQ,GAAG,EAAjB;;AACA,OAAI,MAAMC,GAAV,IAAiBF,MAAjB,EAAwB;AACtBC,IAAAA,QAAQ,CAACE,IAAT,CAAc;AACZX,MAAAA,EAAE,EAAGU,GADO;AAEZT,MAAAA,IAAI,EAAEO,MAAM,CAACE,GAAD,CAAN,CAAYT,IAFN;AAGZC,MAAAA,WAAW,EAAEM,MAAM,CAACE,GAAD,CAAN,CAAYR,WAHb;AAIZC,MAAAA,KAAK,EAAEK,MAAM,CAACE,GAAD,CAAN,CAAYP;AAJP,KAAd;AAMD;;AACDS,EAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAqB,UAArB;AACA,sBACE;AAAS,IAAA,SAAS,EAAEZ,OAAO,CAACiB,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD;;GAAMD,c;UAEWN,O;;;KAFXM,c;AAuBN,eAAeA,cAAf","sourcesContent":["import Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport useHttp from \"../../hooks/use-https\";\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: \"m1\",\r\n    name: \"Sushi\",\r\n    description: \"Finest fish and veggies\",\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    name: \"Schnitzel\",\r\n    description: \"A german specialty!\",\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    name: \"Barbecue Burger\",\r\n    description: \"American, raw, meaty\",\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: \"m4\",\r\n    name: \"Green Bowl\",\r\n    description: \"Healthy...and green...\",\r\n    price: 18.99,\r\n  },\r\n];\r\n\r\nconst AvailableMeals = () => {\r\n  const mealsList = DUMMY_MEALS.map((meal) => <MealItem id={meal.id} key={meal.id} name={meal.name} description={meal.description} price={meal.price}/>);\r\n  const result = useHttp();\r\n  const mealList = [];\r\n  for(const key in result){\r\n    mealList.push({\r\n      id : key,\r\n      name: result[key].name,\r\n      description: result[key].description,\r\n      price: result[key].price\r\n    })\r\n  }\r\n  console.log(DUMMY_MEALS);\r\n  console.log(mealList,'mealList');\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}