{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pare\\\\Development\\\\React\\\\11-FoodOrderApp\\\\src\\\\component\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport Input from \"../../UI/Input\";\nimport classes from \"./MealItemForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemForm = props => {\n  _s();\n\n  const [amountIdValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value; //this number value is always string\n\n    const numberAmount = +enteredAmount; // convert string to number\n\n    console.log(enteredAmount);\n\n    if (enteredAmount.trim().length === 0 || numberAmount < 1 || numberAmount > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    props.onAddToCart(numberAmount);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: \"amount_\" + props.id,\n        // this changed!\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        defaultValue: \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), !amountIdValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amout(1-5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealItemForm, \"z5sNGKsyRLN25H4JRa08nrqCMRs=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["D:/Pare/Development/React/11-FoodOrderApp/src/component/Meals/MealItem/MealItemForm.js"],"names":["useRef","useState","Input","classes","MealItemForm","props","amountIdValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","numberAmount","console","log","trim","length","onAddToCart","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMO,cAAc,GAAGR,MAAM,EAA7B;;AAEA,QAAMS,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C,CAF+B,CAEqB;;AACpD,UAAMC,YAAY,GAAG,CAACH,aAAtB,CAH+B,CAGM;;AACrCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;;AACA,QACEA,aAAa,CAACM,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAJ,YAAY,GAAG,CADf,IAEAA,YAAY,GAAG,CAHjB,EAIE;AACAR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;AACE;;AACJF,IAAAA,KAAK,CAACe,WAAN,CAAkBL,YAAlB;AACE,GAdD;;AAeA,sBACE;AAAM,IAAA,SAAS,EAAEZ,OAAO,CAACkB,IAAzB;AAA+B,IAAA,QAAQ,EAAEZ,aAAzC;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAED,cADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLc,QAAAA,EAAE,EAAE,YAAYjB,KAAK,CAACiB,EADjB;AACqB;AAC1BC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,GAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcA,CAACrB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArCD;;GAAMF,Y;;KAAAA,Y;AAuCN,eAAeA,YAAf","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport Input from \"../../UI/Input\";\r\nimport classes from \"./MealItemForm.module.css\";\r\n\r\nconst MealItemForm = (props) => {\r\n  const [amountIdValid, setAmountIsValid] = useState(true);\r\n  const amountInputRef = useRef();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredAmount = amountInputRef.current.value; //this number value is always string\r\n    const numberAmount = +enteredAmount; // convert string to number\r\n    console.log(enteredAmount);\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      numberAmount < 1 ||\r\n      numberAmount > 5\r\n    ) {\r\n      setAmountIsValid(false);\r\n\t  return;\r\n    }\r\n\tprops.onAddToCart(numberAmount);\r\n  };\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount_\" + props.id, // this changed!\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button type=\"submit\">+ Add</button>\r\n\t  {!amountIdValid && <p>Please enter a valid amout(1-5).</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n"]},"metadata":{},"sourceType":"module"}