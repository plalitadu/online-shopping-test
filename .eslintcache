[{"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/index.js":"1","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/App.js":"2","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/store/CartProvider.js":"3","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/Meals.js":"4","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Layout/Header.js":"5","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Cart/Cart.js":"6","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/store/cart-context.js":"7","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/MealsSummary.js":"8","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/AvailableMeals.js":"9","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Cart/CartItem.js":"10","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Layout/HeaderCartButton.js":"11","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Cart/Checkout.js":"12","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/UI/Modal.js":"13","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Cart/CartIcon.js":"14","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/UI/Card.js":"15","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/MealItem/MealItem.js":"16","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/hooks/use-https.js":"17","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/hooks/use-input.js":"18","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/MealItem/MealItemForm.js":"19","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/UI/Input.js":"20"},{"size":142,"mtime":1616594953000,"results":"21","hashOfConfig":"22"},{"size":677,"mtime":1632836781086,"results":"23","hashOfConfig":"22"},{"size":2913,"mtime":1641191107815,"results":"24","hashOfConfig":"22"},{"size":276,"mtime":1632407153023,"results":"25","hashOfConfig":"22"},{"size":569,"mtime":1677506663461,"results":"26","hashOfConfig":"22"},{"size":3125,"mtime":1647415370774,"results":"27","hashOfConfig":"22"},{"size":205,"mtime":1641191025507,"results":"28","hashOfConfig":"22"},{"size":457,"mtime":1677506863598,"results":"29","hashOfConfig":"22"},{"size":2134,"mtime":1677507869916,"results":"30","hashOfConfig":"22"},{"size":614,"mtime":1632925707942,"results":"31","hashOfConfig":"22"},{"size":1364,"mtime":1633009117344,"results":"32","hashOfConfig":"22"},{"size":4665,"mtime":1641133147445,"results":"33","hashOfConfig":"22"},{"size":800,"mtime":1632926463013,"results":"34","hashOfConfig":"22"},{"size":484,"mtime":1632405571949,"results":"35","hashOfConfig":"22"},{"size":156,"mtime":1632490661745,"results":"36","hashOfConfig":"22"},{"size":871,"mtime":1632842276062,"results":"37","hashOfConfig":"22"},{"size":886,"mtime":1641114875309,"results":"38","hashOfConfig":"22"},{"size":768,"mtime":1641128116399,"results":"39","hashOfConfig":"22"},{"size":1256,"mtime":1632841661818,"results":"40","hashOfConfig":"22"},{"size":407,"mtime":1632840705004,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x6d0a8",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/index.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/App.js",["90","91"],"import { Fragment, useState,useContext } from \"react\";\nimport Header from \"./component/Layout/Header\";\nimport Meals from \"./component/Meals/Meals\";\nimport Cart from \"./component/Cart/Cart\";\nimport CartProvider from \"./store/CartProvider\";\n\nfunction App() {\n  const [cartIsShown, setCartIsShown] = useState(false);\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n\n \n  return (\n    <CartProvider>\n      {cartIsShown && <Cart onClose={hideCartHandler} />}\n      <Header onShowCart={showCartHandler} />\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/store/CartProvider.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/Meals.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Layout/Header.js",["92"],"import React, { Fragment } from \"react\";\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\nimport classes from \"./Header.module.css\";\r\nimport mealImage from '../../assets/meal.jpg';\r\nconst Header = (props) => {\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header className={classes.header}>\r\n        <h1>Online Shopping</h1>\r\n        <HeaderCartButton onConfirm={props.onShowCart}/>\r\n      </header>\r\n      <div className={classes['main-image']}>\r\n\t\t  <img src={mealImage} alt=\"A Japan Meal\"/>\r\n\t  </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Cart/Cart.js",["93","94"],"import react, { useContext, useState, Fragment } from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didItSubmit, setDidItSubmit] = useState(false);\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n\r\n  const totalAmount = `à¸¿${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const removeItemHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n  const addItemHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const submitOrderHanlder = async (userData) => {\r\n    console.log('cartCtx',cartCtx.items)\r\n    setIsSubmitting(true);\r\n    const response = await fetch(\r\n      \"https://react-http-food-88161-default-rtdb.asia-southeast1.firebasedatabase.app/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderItem: cartCtx.items,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    \r\n    setIsSubmitting(false);\r\n    setDidItSubmit(true);\r\n    cartCtx.clearItem();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={removeItemHandler.bind(null, item.id)}\r\n          onAdd={addItemHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const buttonAction = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const cartContent = (\r\n    <Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHanlder} onCancel={props.onClose} />\r\n      )}\r\n      {!isCheckout && buttonAction}\r\n    </Fragment>\r\n  );\r\n\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n  const didSubmitModalContent = (\r\n    <Fragment>\r\n      <p>Sent the order completed!</p>\r\n      <div className={classes.actions}>\r\n      <button className={classes.button} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n    </div>\r\n    </Fragment>\r\n  );\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {!isSubmitting && !didItSubmit && cartContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {!isSubmitting && didItSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/store/cart-context.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/MealsSummary.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/AvailableMeals.js",["95","96","97"],"import { useState, useCallback, useEffect } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport useHttp from \"../../hooks/use-https\";\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: \"m1\",\r\n    name: \"Sushi\",\r\n    description: \"Finest fish and veggies\",\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    name: \"Schnitzel\",\r\n    description: \"A german specialty!\",\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    name: \"Barbecue Burger\",\r\n    description: \"American, raw, meaty\",\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: \"m4\",\r\n    name: \"Green Bowl\",\r\n    description: \"Healthy...and green...\",\r\n    price: 18.99,\r\n  },\r\n];\r\n\r\nconst AvailableMeals = () => {\r\n  const [mealList, setMealList] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchMealHanlder = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\r\n        // \"https://react-http-food-88161-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\"\r\n        \"https://online-shopping-ec42f-default-rtdb.asia-southeast1.firebasedatabase.app/products.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      const loadedMeal = [];\r\n\r\n      for (const key in data) {\r\n       \r\n        loadedMeal.push({\r\n          id: key,\r\n          name: data[key].name,\r\n          description: data[key].description,\r\n          price: data[key].price,\r\n        });\r\n      }\r\n\r\n      setMealList(loadedMeal);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }, []);\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchMealHanlder();\r\n  }, [fetchMealHanlder]);\r\n\r\n  const mealsList = mealList.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n        \r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Cart/CartItem.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Layout/HeaderCartButton.js",["98"],"import { useContext, useEffect, useState } from \"react\";\r\nimport CartIcon from \"../Cart/CartIcon\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport classes from \"./HeaderCartButton.module.css\";\r\n\r\nconst HeaderCartButton = (props) => {\r\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const { items } = cartCtx; // use deconstructorring object to get only index 'items(to be dependency)' from cartCtx\r\n\r\n  const numberOfCartItems = items.reduce((currentNum, item) => {\r\n    return currentNum + item.amount;\r\n  }, 0);\r\n\r\n  const btnClasses = `${classes.button} ${\r\n    btnIsHighlighted ? classes.bump : \"\"\r\n  }`;\r\n\r\n  useEffect(() => {\r\n    if (cartCtx.items.length === 0) {\r\n      return;\r\n    }\r\n    setBtnIsHighlighted(true);\r\n\tconst timer = setTimeout(()=>{\r\n\t\tsetBtnIsHighlighted(false);\r\n\t},300); //300ms is time play bump animation in css file\r\n\r\n\treturn () =>{ //cleanup function to clear timer\r\n\t\tclearTimeout(timer)\r\n\t}\r\n\r\n  }, [items]); // use items as a dependency\r\n\r\n  return (\r\n    <button className={btnClasses} onClick={props.onConfirm}>\r\n      <span className={classes.icon}>\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={classes.badge}>{numberOfCartItems}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default HeaderCartButton;\r\n","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Cart/Checkout.js",["99","100","101","102","103","104","105"],"import { useState } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from './Checkout.module.css';\r\nimport useInput from \"../../hooks/use-input\";\r\n// import classes from './Modal.module.css';\r\n\r\nconst Checkout = (props) => {\r\n  const {\r\n    value: enteredName,\r\n    valueIsValid: enteredNameIsValid,\r\n    inputHasError: nameInputIsInvalid,\r\n    valueInputHandler: nameInputHandler,\r\n    valueInputBlurHandler: nameInputOnblurHandler,\r\n    reset: resetNameInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredStreet,\r\n    valueIsValid: enteredStreetIsValid,\r\n    inputHasError: streetInputIsInvalid,\r\n    valueInputHandler: streetInputHandler,\r\n    valueInputBlurHandler: streetInputOnblurHandler,\r\n    reset: resetStreetInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredPostcode,\r\n    valueIsValid: enteredPostcodeIsValid,\r\n    inputHasError: postcodeInputIsInvalid,\r\n    valueInputHandler: postcodeInputHandler,\r\n    valueInputBlurHandler: postcodeInputOnblurHandler,\r\n    reset: resetPostcodeInput,\r\n  } = useInput(\r\n    (value) =>\r\n      !isNaN(value) &&\r\n      parseInt(Number(value)) == value &&\r\n      !isNaN(parseInt(value, 10))\r\n  );\r\n\r\n  const {\r\n    value: enteredCity,\r\n    valueIsValid: enteredCityIsValid,\r\n    inputHasError: cityInputIsInvalid,\r\n    valueInputHandler: cityInputHandler,\r\n    valueInputBlurHandler: cityInputOnblurHandler,\r\n    reset: resetCityInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  //   const enteredInputIsInvalid = enteredName.trim() !== \"\" && enteredStreet.trim() !== \"\"\r\n  //   && enteredPostal.trim() !== '' && enteredCity.trim() !== '';\r\n\r\n  let formIsInvalid = false;\r\n  if (\r\n    enteredNameIsValid &&\r\n    enteredStreetIsValid &&\r\n    enteredPostcodeIsValid &&\r\n    enteredCityIsValid\r\n  ) {\r\n    formIsInvalid = true;\r\n  }\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!formIsInvalid) {\r\n      return;\r\n    }\r\n   \r\n    props.onConfirm({\r\n        name: enteredName,\r\n        street: enteredStreet,\r\n        postcode: enteredPostcode,\r\n        city: enteredCity\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${!nameInputIsInvalid ? '': classes.invalid }`;\r\n  const streetControlClasses = `${classes.control} ${!streetInputIsInvalid ? '': classes.invalid }`;\r\n  const postcodeControlClasses = `${classes.control} ${!postcodeInputIsInvalid ? '': classes.invalid }`;\r\n  const cityeControlClasses = `${classes.control} ${!cityInputIsInvalid ? '': classes.invalid }`;\r\n  \r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameInputHandler}\r\n          onBlur={nameInputOnblurHandler}\r\n          value={enteredName}\r\n        />\r\n        {nameInputIsInvalid && (\r\n          <p className=\"errortext\">Name must not empty.</p>\r\n        )}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"street\"\r\n          onChange={streetInputHandler}\r\n          onBlur={streetInputOnblurHandler}\r\n          value={enteredStreet}\r\n        />\r\n        {streetInputIsInvalid && (\r\n          <p className=\"errortext\">Street must not empty.</p>\r\n        )}\r\n      </div>\r\n      <div className={postcodeControlClasses}>\r\n        <label htmlFor=\"postalCode\">Postal Code</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postalCode\"\r\n          onChange={postcodeInputHandler}\r\n          onBlur={postcodeInputOnblurHandler}\r\n          value={enteredPostcode}\r\n        />\r\n        {postcodeInputIsInvalid && (\r\n          <p className=\"errortext\">\r\n            Postcode must not empty & should be integer.\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div className={cityeControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={cityInputHandler}\r\n          onBlur={cityInputOnblurHandler}\r\n          value={enteredCity}\r\n        />\r\n        {cityInputIsInvalid && <p>City must not empty.</p>}\r\n      </div>\r\n      {/* {!formIsInvalid && <p className=\"error-text\">All Input are required.</p>} */}\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit} disabled={!formIsInvalid}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/UI/Modal.js",["106"],"import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Card from \"./Card\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose}></div>;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal} >\r\n      <div >{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.onClose} />,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay >{props.children}</ModalOverlay>,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Cart/CartIcon.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/UI/Card.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/MealItem/MealItem.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/hooks/use-https.js",["107","108","109"],"import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = async () => {\r\n    const [mealList,setMealList] = useState([]);\r\n    const [error,setError] = useState(null);\r\n    try {\r\n        const response = await fetch('https://react-http-food-88161-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json');\r\n  \r\n        if (!response.ok) {\r\n            throw new Error(\"Something went wrong!\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        const loadedMeal = [];\r\n\r\n        for(const key in data){\r\n            loadedMeal.push({\r\n            id : key,\r\n            name: data[key].name,\r\n            description: data[key].description,\r\n            price: data[key].price\r\n            })\r\n        }\r\n\r\n        setMealList(loadedMeal);\r\n        \r\n    } catch (error) {\r\n        setError(error.message);\r\n    }\r\n  \r\n\r\n  \r\n};\r\n\r\nexport default useHttp;\r\n","/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/hooks/use-input.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/Meals/MealItem/MealItemForm.js",[],"/Users/nb1001995/Pare/Others/React/11-FoodOrderApp/src/component/UI/Input.js",[],{"ruleId":"110","severity":1,"message":"111","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"110","severity":1,"message":"114","line":1,"column":29,"nodeType":"112","messageId":"113","endLine":1,"endColumn":39},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"115","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"116","line":31,"column":11,"nodeType":"112","messageId":"113","endLine":31,"endColumn":19},{"ruleId":"110","severity":1,"message":"117","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":15},{"ruleId":"110","severity":1,"message":"118","line":7,"column":7,"nodeType":"112","messageId":"113","endLine":7,"endColumn":18},{"ruleId":"110","severity":1,"message":"119","line":36,"column":10,"nodeType":"112","messageId":"113","endLine":36,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":32,"column":6,"nodeType":"122","endLine":32,"endColumn":13,"suggestions":"123"},{"ruleId":"110","severity":1,"message":"124","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"110","severity":1,"message":"125","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"110","severity":1,"message":"126","line":14,"column":12,"nodeType":"112","messageId":"113","endLine":14,"endColumn":26},{"ruleId":"110","severity":1,"message":"127","line":23,"column":12,"nodeType":"112","messageId":"113","endLine":23,"endColumn":28},{"ruleId":"110","severity":1,"message":"128","line":32,"column":12,"nodeType":"112","messageId":"113","endLine":32,"endColumn":30},{"ruleId":"129","severity":1,"message":"130","line":36,"column":31,"nodeType":"131","messageId":"132","endLine":36,"endColumn":33},{"ruleId":"110","severity":1,"message":"133","line":46,"column":12,"nodeType":"112","messageId":"113","endLine":46,"endColumn":26},{"ruleId":"110","severity":1,"message":"134","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":12},{"ruleId":"110","severity":1,"message":"135","line":1,"column":20,"nodeType":"112","messageId":"113","endLine":1,"endColumn":31},{"ruleId":"110","severity":1,"message":"136","line":4,"column":12,"nodeType":"112","messageId":"113","endLine":4,"endColumn":20},{"ruleId":"110","severity":1,"message":"119","line":5,"column":12,"nodeType":"112","messageId":"113","endLine":5,"endColumn":17},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'react' is defined but never used.","'response' is assigned a value but never used.","'useHttp' is defined but never used.","'DUMMY_MEALS' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cartCtx.items.length'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'useState' is defined but never used.","'Modal' is defined but never used.","'resetNameInput' is assigned a value but never used.","'resetStreetInput' is assigned a value but never used.","'resetPostcodeInput' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'resetCityInput' is assigned a value but never used.","'Card' is defined but never used.","'useCallback' is defined but never used.","'mealList' is assigned a value but never used.",{"desc":"138","fix":"139"},"Update the dependencies array to be: [cartCtx.items.length, items]",{"range":"140","text":"141"},[1014,1021],"[cartCtx.items.length, items]"]